name: Spleis

on:
  push:
    paths-ignore:
      - 'sykepenger-api/**'
      - 'sykepenger-opprydding-dev/**'
      - 'workflows/spleis-jobs.yml'
      - 'workflows/spleis-opprydding-dev.yml'
      - 'jobs/**'
      - 'doc/**'
      - '.idea/**'
      - 'README.md'
      - 'LICENSE'
      - 'CODEOWNERS'
    branches:
      - master

jobs:
  set_version:
    name: set image name
    runs-on: ubuntu-latest
    steps:
      - name: create docker tag
        run: echo "TAG=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV
    outputs:
      image: ghcr.io/${{ github.repository }}/spleis:${{ env.TAG }}

  build:
    name: build docker image
    runs-on: ubuntu-latest-16-cores
    needs: set_version
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17.x'
          cache: 'gradle'
      - name: test and build
        run: ./gradlew test build
      - name: build docker image
        run: docker build -f Dockerfile sykepenger-mediators --pull -t ${{ needs.set_version.outputs.image }}
      - name: push docker image
        run: |
          docker login ghcr.io --username "$GITHUB_REPOSITORY" -p ${{ secrets.GITHUB_TOKEN }}
          docker push ${{ needs.set_version.outputs.image }}

  snyk:
    name: check vulnerabilities
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Gradle vulnerability check
        uses: snyk/actions/gradle@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --all-sub-projects --org=tbd-ty7 --fail-on=all --configuration-matching='^runtimeClasspath'
          command: monitor

  deployDev:
    name: deploy to dev
    needs: [set_version, build, snyk]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: deploy/dev.yml
          IMAGE: ${{ needs.set_version.outputs.image }}

  deployProd:
    name: deploy to prod
    needs: [set_version, build, snyk]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: deploy/prod.yml
          IMAGE: ${{ needs.set_version.outputs.image }}
